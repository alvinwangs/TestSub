<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.anda.persistence.db.mapper.OpenOrderMapper">

    <resultMap id="openOrderResultMap" type="com.anda.persistence.model.OpenOrder">
        <id column="id" property="id"/>
        <result column="sequence_id" property="sequenceId"/>
        <result column="user_id" property="userId"/>
        <result column="wallet_id" property="walletId"/>
        <result column="portfolio_id" property="portfolioId"/>
        <result column="contract_id" property="contractId"/>
        <result column="settle_currency" property="settleCurrency"/>
        <result column="trigger_by" property="triggerBy"/>

        <result column="order_id" property="orderId"/>
        <result column="client_order_id" property="clientOrderId"/>

        <result column="order_price" property="orderPrice"/>
        <result column="quantity" property="quantity"/>
        <result column="hidden_quantity" property="hiddenQuantity"/>
        <result column="quantity_limit" property="quantityLimit"/>
        <result column="cost_limit" property="costLimit"/>
        <result column="side" property="side"/>
        <result column="cancelled_quantity" property="cancelledQuantity"/>
        <result column="cancelled_hidden_qty" property="cancelledHiddenQty"/>
        <result column="is_taker" property="taker"/>

        <result column="remain_qty_limit" property="remainQtyLimit"/>
        <result column="remain_qty" property="remainQty"/>
        <result column="remain_hidden_qty" property="remainHiddenQty"/>
        <result column="remain_cost_limit" property="remainCostLimit"/>

        <result column="is_must_fill_in_full" property="mustFillInFull"/>
        <result column="is_rest_on_book" property="restOnBook"/>
        <result column="is_hidden_first" property="hiddenFirst"/>
        <result column="is_specified_price" property="specifiedPrice"/>
        <result column="is_post_only" property="postOnly"/>

        <result column="expire_after_millisecond" property="expireAfterMillisecond"/>
        <result column="expiration" property="expiration"/>
        <result column="self_trade_policy" property="selfTradePolicy"/>
        <result column="order_type" property="orderType"/>

        <result column="error" property="error"/>
        <result column="status" property="status"/>
        <result column="fill_status" property="fillStatus"/>
        <result column="filled_quantity" property="filledQuantity"/>
        <result column="filled_value" property="filledValue"/>
        <result column="avg_filled_price" property="avgFilledPrice"/>
        <result column="total_fee" property="totalFee"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>

    </resultMap>

    <sql id="all_column">

        sequence_id,
        user_id,
        wallet_id,
        portfolio_id,
        contract_id,
        settle_currency,
        trigger_by,
        order_id,
        client_order_id,
        order_price,
        quantity,
        hidden_quantity,
        quantity_limit,
        cost_limit,
        side,
        cancelled_quantity,
        cancelled_hidden_qty,
        is_taker,
        remain_qty_limit,
        remain_qty,
        remain_hidden_qty,
        remain_cost_limit,
        is_must_fill_in_full,
        is_rest_on_book,
        is_hidden_first,
        is_specified_price,
        is_post_only,
        expire_after_millisecond,
        expiration,
        self_trade_policy,
        order_type,
        error,
        status,
        fill_status,
        filled_quantity,
        filled_value,
        avg_filled_price,
        total_fee,
        create_time,
        update_time
    </sql>

    <insert id="insert" parameterType="com.anda.persistence.model.OpenOrder">
        INSERT INTO tb_open_orders(
        <include refid="all_column"/>
        )
        VALUES (
        #{sequenceId},
        #{userId},
        #{walletId},
        #{portfolioId},
        #{contractId},
        #{settleCurrency},
        #{triggerBy},
        #{orderId},
        #{clientOrderId},
        #{orderPrice},
        #{quantity},
        #{hiddenQuantity},
        #{quantityLimit},
        #{costLimit},
        #{side},
        #{cancelledQuantity},
        #{cancelledHiddenQty},
        #{isTaker},
        #{remainQtyLimit},
        #{remainQty},
        #{remainHiddenQty},
        #{remainCostLimit},
        #{isMustFillInFull},
        #{isRestOnBook},
        #{isHiddenFirst},
        #{isSpecifiedPrice},
        #{isPostOnly},
        #{expireAfterMillisecond},
        #{expiration},
        #{selfTradePolicy},
        #{orderType},
        #{error},
        #{status},
        #{fillStatus},
        #{filledQuantity},
        #{filledValue},
        #{avgFilledPrice},
        #{totalFee},
        #{createTime},
        #{updateTime}
        )

    </insert>
    <insert id="insertList" parameterType="it.unimi.dsi.fastutil.objects.ReferenceArrayList">
        INSERT INTO tb_open_orders(
        <include refid="all_column"/>
        )
        VALUES
        <foreach collection="list" item="order" index="index" separator=",">
            (
            #{order.sequenceId},
            #{order.userId},
            #{order.walletId},
            #{order.portfolioId},
            #{order.contractId},
            #{order.settleCurrency},
            #{order.triggerBy},
            #{order.orderId},
            #{order.clientOrderId},
            #{order.orderPrice},
            #{order.quantity},
            #{order.hiddenQuantity},
            #{order.quantityLimit},
            #{order.costLimit},
            #{order.side},
            #{order.cancelledQuantity},
            #{order.cancelledHiddenQty},
            #{order.isTaker},
            #{order.remainQtyLimit},
            #{order.remainQty},
            #{order.remainHiddenQty},
            #{order.remainCostLimit},
            #{order.isMustFillInFull},
            #{order.isRestOnBook},
            #{order.isHiddenFirst},
            #{order.isSpecifiedPrice},
            #{order.isPostOnly},
            #{order.expireAfterMillisecond},
            #{order.expiration},
            #{order.selfTradePolicy},
            #{order.orderType},
            #{order.error},
            #{order.status},
            #{order.fillStatus},
            #{order.filledQuantity},
            #{order.filledValue},
            #{order.avgFilledPrice},
            #{order.totalFee},
            #{order.createTime},
            #{order.updateTime}
            )
        </foreach>

    </insert>
    <update id="update" parameterType="com.anda.persistence.model.OpenOrder">
        update  tb_open_orders set
        sequence_id = #{sequenceId},
        status = #{status},
        remain_qty_limit = #{remainQtyLimit},
        remain_qty = #{remainQty},
        remain_hidden_qty =#{remainHiddenQty},
        remain_cost_limit =  #{remainCostLimit},
        cancelled_quantity = #{cancelledQuantity},
        cancelled_Hidden_qty=#{cancelledHiddenQty}
        <if test="filledQuantity >0" >,
        filled_quantity = #{filledQuantity},
        filled_value = filled_value+#{filledValue},
        total_fee = #{totalFee},
        avg_filled_price = filled_value /(#{filledQuantity} * #{contractSize}),
        </if>
        side = #{side},error=#{error},trigger_by = #{triggerBy},update_time=#{updateTime},fill_status=#{fillStatus}
        where order_id = #{orderId}
    </update>



    <select id="find" resultMap="openOrderResultMap">
        select <include refid="all_column"/>
        from tb_open_orders
        where order_id = #{arg0}
    </select>
</mapper>